# NodePort Service
apiVersion: v1
kind: Service
metadata:
  name: ms-service-nodeport
spec:
  type: NodePort
  selector:
    app: microservice-one
  ports:
  - port: 3200
    targetPort: 3000
    nodePort: 30008
    # The port address where NodePort service will be accessible at
    # Can only take values in the range of 30000-32767
    # Now the Browser can request microservice-one by specifying the IP Address
    # of the Worker Node followed by the NodePort
---
# LoadBalancer Service
apiVersion: v1
kind: Service
metadata:
  name: ms-service-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: microservice-one
  ports:
  - port: 3200
    targetPort: 3000
    nodePort: 30010
---
# Persistent Volume Claim for a PV
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-name
spec:
  storageClassName: manual
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
# Pod using PVC for a PV
apiVersion: v1
kind: Pod
metadata:
  name: mypod
  labels:
    name: mypod
spec:
  containers:
  - name: myfrontend
    image: nginx
    ports:
      - containerPort: 80
    volumeMounts:
    - mountPath: "/var/www/html"
      name: mypd
  volumes:
    - name: mypd
      persistentVolumeClaim:
        claimName: pvc-name
--- 
# Storage Class
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: storage-class-name
provisioner: kubernetes.io/aws-ebs
parameters:
  type: io1
  iopsPerGB: "10"
  fsType: ext4
---
# PVC for a Storage Class
# Persistent Volume Claim for a PV
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-name
spec:
  storageClassName: storage-class-name
  resources:
    requests:
      storage: 100Gi
  accessModes:
    - ReadWriteOnce
---
# Multi-Port Service
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
  - name: mongodb
    port: 3200
    targetPort: 3000
  - name: mongodb-exporter
    port: 9216
    targetPort: 9216